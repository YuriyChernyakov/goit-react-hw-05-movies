{"version":3,"file":"static/js/957.6d66d29d.chunk.js","mappings":"4PA+FA,UAxFqB,WACnB,OAAgCA,EAAAA,EAAAA,UAAS,CAAC,GAA1C,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAA0BF,EAAAA,EAAAA,WAAS,GAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA4BJ,EAAAA,EAAAA,WAAS,GAArC,eAAOK,EAAP,KAAeC,EAAf,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GACFE,GAAWC,EAAAA,EAAAA,MACXC,EAAaF,EAASG,MAAQH,EAASG,MAAMC,KAAhC,WAInBC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,6CAAyCR,EAAzC,4DAClBD,GAAU,GACV,IAAMU,EAAM,mCAAG,8GAEWC,EAAAA,EAAAA,GAAMF,GAFjB,OAELG,EAFK,OAGXhB,EAAYgB,GAHD,gDAKXd,GAAS,GALE,yBAOXE,GAAU,GAPC,4EAAH,qDAUZU,GACD,GAAE,CAACT,IACJ,IACEY,EAOElB,EAPFkB,YACAC,EAMEnB,EANFmB,KACAC,EAKEpB,EALFoB,OACAC,EAIErB,EAJFqB,SACAC,EAGEtB,EAHFsB,aACAC,EAEEvB,EAFFuB,MACAC,EACExB,EADFwB,aAGF,GAAKA,EAIL,OACE,iBAAKC,UAAWC,EAAAA,EAAAA,OAAhB,UACGtB,IAAU,SAAC,IAAD,KACX,UAAC,KAAD,CAAMqB,UAAWC,EAAAA,EAAAA,QAAaC,GAAIjB,EAAlC,WACE,SAAC,MAAD,CAAae,UAAWC,EAAAA,EAAAA,QAD1B,aAICxB,IAAS,2EAEV,iCACE,iBAAKuB,UAAWC,EAAAA,EAAAA,UAAhB,WACE,gBACED,UAAWC,EAAAA,EAAAA,OACXE,IAAKV,EA7CM,kCA6CuBA,EA5C5B,iIA6CNW,IAAG,OAAEN,QAAF,IAAEA,EAAAA,EAASJ,KAEhB,iBAAKM,UAAWC,EAAAA,EAAAA,UAAhB,WACE,iCACGH,QADH,IACGA,EAAAA,EAASJ,EADZ,KACoBK,EAAaM,MAAM,EAAG,GAD1C,QAGA,0CAAiC,GAAfR,GAAmBS,QAAQ,GAA7C,QACA,sCACA,cAAGN,UAAWC,EAAAA,EAAAA,QAAd,SAA4BL,KAC5B,oCACA,cAAGI,UAAWC,EAAAA,EAAAA,QAAd,SACGN,EAAOY,OACJZ,EAAOa,KAAI,qBAAGd,IAAH,IAAoBe,KAAK,MACpC,0BAIV,iBAAKT,UAAWC,EAAAA,EAAAA,YAAhB,WACE,oDACA,4BACE,SAAC,KAAD,CAASD,UAAWC,EAAAA,EAAAA,WAAgBC,GAAG,OAAOhB,MAAO,CAAEC,KAAMF,GAA7D,mBAGA,SAAC,KAAD,CAASe,UAAWC,EAAAA,EAAAA,WAAgBC,GAAG,UAAUhB,MAAO,CAAEC,KAAMF,GAAhE,4BAKJ,SAAC,EAAAyB,SAAD,CAAUC,UAAW,KAArB,UACE,SAAC,KAAD,WAKT,C","sources":["Pages/MovieDetails.js"],"sourcesContent":["import { useState, useEffect, Suspense } from 'react';\nimport { Outlet, useParams, useLocation, NavLink, Link } from 'react-router-dom';\nimport { fetch } from 'components/Fetch';\nimport Loader from '../components/Loader/Loader';\nimport { BiArrowBack } from 'react-icons/bi';\nimport css from '../components/styled.module.css'\n\nconst MovieDetails = () => {\n  const [fullInfo, setFullInfo] = useState({});\n  const [error, setError] = useState(false);\n  const [loader, setLoader] = useState(false);\n  const { id } = useParams();\n  const location = useLocation();\n  const backAdress = location.state ? location.state.from : `/movies`;\n  const firstImgLink = 'https://image.tmdb.org/t/p/w300';\n  const defaultImg = `https://st4.depositphotos.com/14953852/22772/v/600/depositphotos_227725020-stock-illustration-no-image-available-icon-flat.jpg`;\n\n  useEffect(() => {\n    const fullInfoLink = `https://api.themoviedb.org/3/movie/${id}?api_key=73d1d1a66744e8a71fb191bdd223462e&language=en-US`;\n    setLoader(true);\n    const getApi = async () => {\n      try {\n        const getInfo = await fetch(fullInfoLink);\n        setFullInfo(getInfo);\n      } catch {\n        setError(true);\n      } finally {\n        setLoader(false);\n      }\n    };\n    getApi();\n  }, [id]);\n  const {\n    poster_path,\n    name,\n    genres,\n    overview,\n    vote_average,\n    title,\n    release_date,\n  } = fullInfo;\n\n  if (!release_date) {\n    return;\n  }\n\n  return (\n    <div className={css.divDet}>\n      {loader && <Loader />}\n      <Link className={css.linkDet} to={backAdress}>\n        <BiArrowBack className={css.arrow} />\n        Go back\n      </Link>\n      {error && <h2>Sorry, something went wrong. Please try again</h2>}\n\n      <>\n        <div className={css.divDetMov}>\n          <img\n            className={css.imgDet}\n            src={poster_path ? firstImgLink + poster_path : defaultImg}\n            alt={title ?? name}\n          />\n          <div className={css.divDetInf}>\n            <h3>\n              {title ?? name} ({release_date.slice(0, 4)})\n            </h3>\n            <h4>User Score: {(vote_average * 10).toFixed(1)}%</h4>\n            <h4>Overview</h4>\n            <p className={css.textDet}>{overview}</p>\n            <h4>Genres</h4>\n            <p className={css.textDet}>\n              {genres.length\n                ? genres.map(({ name }) => name).join(', ')\n                : 'unknown genres'}\n            </p>\n          </div>\n        </div>\n        <div className={css.divDetAbout}>\n          <h4>Additional Information</h4>\n          <div>\n            <NavLink className={css.linkDetNav} to=\"cast\" state={{ from: backAdress }}>\n              Cast\n            </NavLink>\n            <NavLink className={css.linkDetNav} to=\"reviews\" state={{ from: backAdress }}>\n              Reviews\n            </NavLink>\n          </div>\n        </div>\n        <Suspense ffullback={null}>\n          <Outlet />\n        </Suspense>\n      </>\n    </div>\n  );\n};\nexport default MovieDetails;"],"names":["useState","fullInfo","setFullInfo","error","setError","loader","setLoader","id","useParams","location","useLocation","backAdress","state","from","useEffect","fullInfoLink","getApi","fetch","getInfo","poster_path","name","genres","overview","vote_average","title","release_date","className","css","to","src","alt","slice","toFixed","length","map","join","Suspense","ffullback"],"sourceRoot":""}